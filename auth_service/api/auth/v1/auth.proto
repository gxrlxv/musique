syntax = "proto3";

package api.auth.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/gxrlxv/musique/auth_service/api/auth/v1";


// The auth service definition.
service Auth{
  rpc SignUp(SignUpRequest) returns(SignUpReply){
    option (google.api.http) = {
      post: "/auth/sign-up"
      body: "*"
    };
  };

  rpc SignIn(SignInRequest) returns(SignInReply){
    option (google.api.http) = {
      post: "/auth/sign-in"
      body: "*"
    };
  };

  rpc RefreshToken(RefreshTokenRequest) returns(RefreshTokenReply){
    option (google.api.http) = {
      post: "/auth/refresh"
      body: "*"
    };
  };

  rpc Identify(IdentityRequest) returns(IdentityReply){

  }
}

message Tokens{
  string access_token = 1;
  string refresh_token = 2;
}

message SignUpRequest{
    string username = 1[(validate.rules).string = {pattern: "(?i)^[A-Za-z0-9_]+$", min_len: 4, max_len: 32}];
    string email = 2[(validate.rules).string.email = true];
    string password = 3[(validate.rules).string.min_len = 12];
    string repeat_password = 4[(validate.rules).string.min_len = 12];
    string first_name = 5[(validate.rules).string = {pattern: "(?i)^[a-zA-Z]+$"}];
    string last_name = 6[(validate.rules).string = {pattern: "(?i)^[a-zA-Z]+$"}];
    string gender = 7[(validate.rules).string = {in: ["Female", "Male", "Other"]}];
    string country = 8[(validate.rules).string = {pattern: "(?i)^[a-zA-Z]+$"}];
    string city = 9[(validate.rules).string = {pattern: "(?i)^[a-zA-Z]+$"}];
    string phone = 10[(validate.rules).string = {pattern: "(?i)^[0-9]+$", max_len: 20}];
}

message SignUpReply{
  string id = 1;
  Tokens tokens = 2;
}

message SignInRequest{
  string email = 1[(validate.rules).string.email = true];
  string password = 2[(validate.rules).string.min_len = 12];
}

message SignInReply{
  string id = 1;
  Tokens tokens = 2;
}

message RefreshTokenRequest{
  string refresh_token = 1;
}

message RefreshTokenReply{
  Tokens tokens = 1;
}

message IdentityRequest {
  string access_token = 1;
}
message IdentityReply {
  string id = 1;
}