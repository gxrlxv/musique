// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.1
// source: userPlaylist/v1/userPlaylist.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddTrackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackId string `protobuf:"bytes,1,opt,name=trackId,proto3" json:"trackId,omitempty"`
}

func (x *AddTrackRequest) Reset() {
	*x = AddTrackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userPlaylist_v1_userPlaylist_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTrackRequest) ProtoMessage() {}

func (x *AddTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userPlaylist_v1_userPlaylist_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTrackRequest.ProtoReflect.Descriptor instead.
func (*AddTrackRequest) Descriptor() ([]byte, []int) {
	return file_userPlaylist_v1_userPlaylist_proto_rawDescGZIP(), []int{0}
}

func (x *AddTrackRequest) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

type AddTrackReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddTrackReply) Reset() {
	*x = AddTrackReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userPlaylist_v1_userPlaylist_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTrackReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTrackReply) ProtoMessage() {}

func (x *AddTrackReply) ProtoReflect() protoreflect.Message {
	mi := &file_userPlaylist_v1_userPlaylist_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTrackReply.ProtoReflect.Descriptor instead.
func (*AddTrackReply) Descriptor() ([]byte, []int) {
	return file_userPlaylist_v1_userPlaylist_proto_rawDescGZIP(), []int{1}
}

type RemoveTrackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrackId string `protobuf:"bytes,1,opt,name=trackId,proto3" json:"trackId,omitempty"`
}

func (x *RemoveTrackRequest) Reset() {
	*x = RemoveTrackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userPlaylist_v1_userPlaylist_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTrackRequest) ProtoMessage() {}

func (x *RemoveTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userPlaylist_v1_userPlaylist_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTrackRequest.ProtoReflect.Descriptor instead.
func (*RemoveTrackRequest) Descriptor() ([]byte, []int) {
	return file_userPlaylist_v1_userPlaylist_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveTrackRequest) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

type RemoveTrackReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveTrackReply) Reset() {
	*x = RemoveTrackReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userPlaylist_v1_userPlaylist_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTrackReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTrackReply) ProtoMessage() {}

func (x *RemoveTrackReply) ProtoReflect() protoreflect.Message {
	mi := &file_userPlaylist_v1_userPlaylist_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTrackReply.ProtoReflect.Descriptor instead.
func (*RemoveTrackReply) Descriptor() ([]byte, []int) {
	return file_userPlaylist_v1_userPlaylist_proto_rawDescGZIP(), []int{3}
}

type GetTracksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTracksRequest) Reset() {
	*x = GetTracksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userPlaylist_v1_userPlaylist_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTracksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTracksRequest) ProtoMessage() {}

func (x *GetTracksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userPlaylist_v1_userPlaylist_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTracksRequest.ProtoReflect.Descriptor instead.
func (*GetTracksRequest) Descriptor() ([]byte, []int) {
	return file_userPlaylist_v1_userPlaylist_proto_rawDescGZIP(), []int{4}
}

type GetTracksReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTracksReply) Reset() {
	*x = GetTracksReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userPlaylist_v1_userPlaylist_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTracksReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTracksReply) ProtoMessage() {}

func (x *GetTracksReply) ProtoReflect() protoreflect.Message {
	mi := &file_userPlaylist_v1_userPlaylist_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTracksReply.ProtoReflect.Descriptor instead.
func (*GetTracksReply) Descriptor() ([]byte, []int) {
	return file_userPlaylist_v1_userPlaylist_proto_rawDescGZIP(), []int{5}
}

var File_userPlaylist_v1_userPlaylist_proto protoreflect.FileDescriptor

var file_userPlaylist_v1_userPlaylist_proto_rawDesc = []byte{
	0x0a, 0x22, 0x75, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x2b, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x0f, 0x0a,
	0x0d, 0x41, 0x64, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2e,
	0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x12,
	0x0a, 0x10, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x10, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xc0, 0x02, 0x0a, 0x05, 0x54, 0x72, 0x61,
	0x63, 0x6b, 0x12, 0x68, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x64, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1a, 0x22, 0x15, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x49, 0x64, 0x7d, 0x2f, 0x61, 0x64, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a, 0x0b,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x12, 0x20, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x2a, 0x18, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x2f, 0x7b,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12,
	0x5a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x1e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x09, 0x12, 0x07, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x73, 0x42, 0x44, 0x5a, 0x42, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x78, 0x72, 0x6c, 0x78, 0x76,
	0x2f, 0x6d, 0x75, 0x73, 0x69, 0x71, 0x75, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_userPlaylist_v1_userPlaylist_proto_rawDescOnce sync.Once
	file_userPlaylist_v1_userPlaylist_proto_rawDescData = file_userPlaylist_v1_userPlaylist_proto_rawDesc
)

func file_userPlaylist_v1_userPlaylist_proto_rawDescGZIP() []byte {
	file_userPlaylist_v1_userPlaylist_proto_rawDescOnce.Do(func() {
		file_userPlaylist_v1_userPlaylist_proto_rawDescData = protoimpl.X.CompressGZIP(file_userPlaylist_v1_userPlaylist_proto_rawDescData)
	})
	return file_userPlaylist_v1_userPlaylist_proto_rawDescData
}

var file_userPlaylist_v1_userPlaylist_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_userPlaylist_v1_userPlaylist_proto_goTypes = []interface{}{
	(*AddTrackRequest)(nil),    // 0: api.track.v1.AddTrackRequest
	(*AddTrackReply)(nil),      // 1: api.track.v1.AddTrackReply
	(*RemoveTrackRequest)(nil), // 2: api.track.v1.RemoveTrackRequest
	(*RemoveTrackReply)(nil),   // 3: api.track.v1.RemoveTrackReply
	(*GetTracksRequest)(nil),   // 4: api.track.v1.GetTracksRequest
	(*GetTracksReply)(nil),     // 5: api.track.v1.GetTracksReply
}
var file_userPlaylist_v1_userPlaylist_proto_depIdxs = []int32{
	0, // 0: api.track.v1.Track.AddTrack:input_type -> api.track.v1.AddTrackRequest
	2, // 1: api.track.v1.Track.RemoveTrack:input_type -> api.track.v1.RemoveTrackRequest
	4, // 2: api.track.v1.Track.GetTracks:input_type -> api.track.v1.GetTracksRequest
	1, // 3: api.track.v1.Track.AddTrack:output_type -> api.track.v1.AddTrackReply
	3, // 4: api.track.v1.Track.RemoveTrack:output_type -> api.track.v1.RemoveTrackReply
	5, // 5: api.track.v1.Track.GetTracks:output_type -> api.track.v1.GetTracksReply
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_userPlaylist_v1_userPlaylist_proto_init() }
func file_userPlaylist_v1_userPlaylist_proto_init() {
	if File_userPlaylist_v1_userPlaylist_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_userPlaylist_v1_userPlaylist_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTrackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userPlaylist_v1_userPlaylist_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTrackReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userPlaylist_v1_userPlaylist_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTrackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userPlaylist_v1_userPlaylist_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTrackReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userPlaylist_v1_userPlaylist_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTracksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userPlaylist_v1_userPlaylist_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTracksReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_userPlaylist_v1_userPlaylist_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_userPlaylist_v1_userPlaylist_proto_goTypes,
		DependencyIndexes: file_userPlaylist_v1_userPlaylist_proto_depIdxs,
		MessageInfos:      file_userPlaylist_v1_userPlaylist_proto_msgTypes,
	}.Build()
	File_userPlaylist_v1_userPlaylist_proto = out.File
	file_userPlaylist_v1_userPlaylist_proto_rawDesc = nil
	file_userPlaylist_v1_userPlaylist_proto_goTypes = nil
	file_userPlaylist_v1_userPlaylist_proto_depIdxs = nil
}
